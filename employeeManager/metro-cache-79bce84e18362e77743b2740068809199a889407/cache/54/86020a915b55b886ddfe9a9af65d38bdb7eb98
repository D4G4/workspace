__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.actLoginUser = exports.actPasswordChanged = exports.actEmailChanged = undefined;

  var _firebase = _require(_dependencyMap[0], "firebase");

  var _firebase2 = _interopRequireDefault(_firebase);

  var _reactNativeRouterFlux = _require(_dependencyMap[1], "react-native-router-flux");

  var _types = _require(_dependencyMap[2], "./types");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var actEmailChanged = exports.actEmailChanged = function actEmailChanged(email) {
    return {
      type: _types.EMAIL_CHANGED,
      payload: email
    };
  };

  var actPasswordChanged = exports.actPasswordChanged = function actPasswordChanged(password) {
    return {
      type: _types.PASSWORD_CHANGED,
      payload: password
    };
  };

  var actLoginUser = exports.actLoginUser = function actLoginUser(_ref) {
    var email = _ref.email,
        password = _ref.password;
    return function (dispatch) {
      dispatch({
        type: _types.LOGGING_USER_IN
      });

      _firebase2.default.auth().signInWithEmailAndPassword(email, password).then(function (user) {
        return loginUserSuccess(dispatch, user);
      }).catch(function (error) {
        console.log(error);

        _firebase2.default.auth().createUserWithEmailAndPassword(email, password).then(function (user) {
          return loginUserSuccess(dispatch, user);
        }).catch(function () {
          return loginUserFailed(dispatch);
        });
      });
    };
  };

  var loginUserSuccess = function loginUserSuccess(dispatch, user) {
    dispatch({
      type: _types.LOGIN_SUCCESS,
      payload: user
    });

    _reactNativeRouterFlux.Actions.main();
  };

  var loginUserFailed = function loginUserFailed(dispatch) {
    dispatch({
      type: _types.LOGIN_FAILED
    });
  };
});